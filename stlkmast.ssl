variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable timer;
variable vor;
variable stvol1;
variable stvol2;

procedure start;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure Node010;
procedure Node999;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;


procedure checkPartyMembersNearDoor begin
   if (party_member_obj(16777278) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777376) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777377) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777305) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777313) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777323) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777352) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777378) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777368) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777379) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777380) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777295) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777381) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777407) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777411) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777412) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777413) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777481) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777558) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
         return 1;
      end
   end
   if (party_member_obj(16777600) != 0) then begin
      if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
         return 1;
      end
   end
   return 0;
end

procedure start begin
   if (local_var(3) == 0) then begin
      set_local_var(1, random(100, 152));
      set_local_var(2, random(100, 172));
      set_local_var(4, random(65, 95));
      critter_add_trait(self_obj, 1, 6, 300);
      critter_add_trait(self_obj, 1, 5, 187);
      add_mult_objs_to_inven(self_obj, create_object_sid(40, 0, 0, -1), random(0, 2));
      stvol1 := random(1, 10);
      if (stvol1 == 1) then begin
         add_obj_to_inven(self_obj, create_object_sid(592, 0, 0, -1));
      end
      if (stvol1 == 2) then begin
         add_obj_to_inven(self_obj, create_object_sid(582, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(591, 0, 0, -1), random(0, 2));
      end
      if (stvol1 == 3) then begin
         add_obj_to_inven(self_obj, create_object_sid(598, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(586, 0, 0, -1), random(0, 2));
      end
      if (stvol1 == 4) then begin
         add_obj_to_inven(self_obj, create_object_sid(600, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(585, 0, 0, -1), random(0, 3));
      end
      if (stvol1 == 5) then begin
         add_obj_to_inven(self_obj, create_object_sid(581, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(591, 0, 0, -1), random(0, 3));
      end
      if (stvol1 == 6) then begin
         add_obj_to_inven(self_obj, create_object_sid(587, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(585, 0, 0, -1), random(0, 4));
      end
      if (stvol1 == 7) then begin
         add_obj_to_inven(self_obj, create_object_sid(568, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(569, 0, 0, -1), random(2, 4));
      end
      if (stvol1 == 8) then begin
         add_obj_to_inven(self_obj, create_object_sid(602, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(589, 0, 0, -1), random(0, 2));
      end
      if (stvol1 == 9) then begin
         add_obj_to_inven(self_obj, create_object_sid(534, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(535, 0, 0, -1), random(1, 4));
      end
      if (stvol1 == 10) then begin
         add_obj_to_inven(self_obj, create_object_sid(268, 0, 0, -1));
         add_mult_objs_to_inven(self_obj, create_object_sid(95, 0, 0, -1), random(1, 4));
      end
      stvol2 := random(1, 4);
      if (stvol2 == 1) then begin
         add_obj_to_inven(self_obj, create_object_sid(576, 0, 0, -1));
      end
      if (stvol2 == 2) then begin
         add_mult_objs_to_inven(self_obj, create_object_sid(567, 0, 0, -1), random(2, 4));
      end
      if (stvol2 == 3) then begin
         add_obj_to_inven(self_obj, create_object_sid(577, 0, 0, -1));
      end
      if (stvol2 == 4) then begin
         add_mult_objs_to_inven(self_obj, create_object_sid(565, 0, 0, -1), random(1, 3));
      end
      set_local_var(3, 1);
   end
end

procedure critter_p_proc begin
   if ((local_var(0) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
      set_local_var(0, 0);
      attack_setup(self_obj, dude_obj);
   end
   if ((random(0, 550) == 1) and (timer == 0)) then begin
      timer := 1;
      add_timer_event(self_obj, game_ticks(random(40, 60)), 1);
   end
   if ((global_var(653) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
      set_local_var(0, 1);
   end
end

procedure timed_event_p_proc begin
   if ((fixed_param == 1) and (combat_is_initialized == 0)) then begin
      float_msg(self_obj, message_str(1308, random(10, 17)), 0);
      timer := 0;
   end
end

procedure pickup_p_proc begin
   if (vor == 0) then begin
      vor := 1;
      float_msg(self_obj, message_str(1308, random(20, 26)), 2);
   end
   else begin
      vor := 0;
      set_local_var(0, 1);
   end
end

procedure talk_p_proc begin
   if (random(1, 4) != 4) then begin
      float_msg(self_obj, message_str(1308, random(1, 7)), 0);
   end
   else begin
      start_gdialog(1308, self_obj, -1, -1, -1);
      gsay_start;
      call Node010();
      gsay_end;
      end_dialogue;
   end
end

procedure Node010 begin
   gsay_reply(1308, random(1, 7));
   gsay_option(1308, random(1000, 1002), Node999, -1);
end

procedure Node999 begin
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(message_str(1323, 2) + " " + message_str(1323, local_var(1)) + " " + message_str(1324, local_var(2)));
end

procedure map_enter_p_proc begin
   if ((global_var(700) >= 50) and (global_var(700) < 100)) then begin
      if (random(1, 3) == 2) then begin
         set_local_var(0, 1);
      end
   end
   if ((global_var(700) >= 100) and (global_var(700) < 200)) then begin
      if (random(1, 3) != 2) then begin
         set_local_var(0, 1);
      end
   end
   if (global_var(700) >= 200) then begin
      set_local_var(0, 1);
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(700, global_var(700) + 1);
   end
   if (source_obj == dude_obj) then begin
      set_global_var(0, global_var(0) - 10);    //fixed -Q
   end
end

procedure use_skill_on_p_proc begin
   if (vor == 0) then begin
      vor := 1;
      float_msg(self_obj, message_str(1308, random(20, 26)), 2);
      set_local_var(4, local_var(4) + random(5, 10));
   end
   else begin
      vor := 0;
      set_local_var(0, 1);
   end
end

